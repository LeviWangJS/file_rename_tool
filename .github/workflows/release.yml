name: 'Release'

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write
  packages: write
  issues: write
  pull-requests: write
  id-token: write

jobs:
  create-release:
    runs-on: ubuntu-latest  # 改为轻量级系统
    outputs:
      release_id: ${{ steps.create-release.outputs.id }}
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - uses: actions/checkout@v4
      - name: Get version
        id: get_version
        run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
      - name: Create release
        id: create-release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          name: "图片批量重命名工具 v${{ steps.get_version.outputs.version }}"
          body: "请查看更改日志了解详情。"
          draft: true
          prerelease: false

  build:
    needs: create-release
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Setup Rust (Windows)
        if: matrix.platform == 'windows-latest'
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-pc-windows-msvc
      - name: Install Windows Dependencies
        if: matrix.platform == 'windows-latest'
        run: |
          choco install -y nsis
          # 确保 WebView2 运行时存在（Tauri 依赖）
          curl -LO https://go.microsoft.com/fwlink/p/?LinkId=2124703
          start /wait MicrosoftEdgeWebview2Setup.exe /silent /install
      - name: Install app dependencies
        run: npm install
      - name: Build Tauri App
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        run: |
          if [[ "${{ matrix.platform }}" == "macos-latest" ]]; then
            npm run tauri build
          else
            npx tauri build --target x86_64-pc-windows-msvc
          fi
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-${{ matrix.platform }}
          path: src-tauri/target/release/

  publish-release:
    needs: [create-release, build]
    runs-on: ubuntu-latest
    steps:
      - name: Publish release
        uses: softprops/action-gh-release@v1
        with:
          draft: false
          files: |
            src-tauri/target/release/*.dmg
            src-tauri/target/release/*.app.tar.gz
            src-tauri/target/release/*.msi
            src-tauri/target/release/*.exe